Running global teardown...
Global teardown complete.
{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":4,"numPassedTests":35,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":4,"numTotalTests":35,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1746507974075,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["User Registration Controller","POST /userlogin/signup"],"duration":246,"failureDetails":[],"failureMessages":[],"fullName":"User Registration Controller POST /userlogin/signup should create a new user successfully","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should create a new user successfully"},{"ancestorTitles":["User Registration Controller","POST /userlogin/signup"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"User Registration Controller POST /userlogin/signup should return 400 if user already exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 400 if user already exists"},{"ancestorTitles":["User Registration Controller","POST /userlogin/signin"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"User Registration Controller POST /userlogin/signin should sign in successfully with valid credentials","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should sign in successfully with valid credentials"},{"ancestorTitles":["User Registration Controller","POST /userlogin/signin"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"User Registration Controller POST /userlogin/signin should return 404 if user not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 404 if user not found"},{"ancestorTitles":["User Registration Controller","POST /userlogin/signin"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"User Registration Controller POST /userlogin/signin should return 400 with invalid password","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 with invalid password"}],"endTime":1746507976158,"message":"","name":"/home/charvi/Documents/GitHub/HackFolio/backend/controller/test/userRegistration.test.js","startTime":1746507974143,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Sponsor Controller","POST /sponsors"],"duration":50,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Controller POST /sponsors should create a new sponsor and invalidate cache","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a new sponsor and invalidate cache"},{"ancestorTitles":["Sponsor Controller","GET /sponsors/user/:companyName"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Controller GET /sponsors/user/:companyName should get sponsor by company name","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should get sponsor by company name"},{"ancestorTitles":["Sponsor Controller","GET /sponsors/user/:companyName"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Controller GET /sponsors/user/:companyName should return 202 if sponsor not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 202 if sponsor not found"},{"ancestorTitles":["Sponsor Controller","GET /sponsors/verified"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Controller GET /sponsors/verified should get verified sponsors from cache if available","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get verified sponsors from cache if available"},{"ancestorTitles":["Sponsor Controller","GET /sponsors/verified"],"duration":23,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Controller GET /sponsors/verified should get verified sponsors from database if not in cache","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get verified sponsors from database if not in cache"}],"endTime":1746507977512,"message":"","name":"/home/charvi/Documents/GitHub/HackFolio/backend/controller/test/Sponsor.test.js","startTime":1746507976174,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Project Controller","GET /project/hackathonProject/:name"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller GET /project/hackathonProject/:name should return flag=true when project exists","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return flag=true when project exists"},{"ancestorTitles":["Project Controller","GET /project/hackathonProject/:name"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller GET /project/hackathonProject/:name should return flag=false when project does not exist","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return flag=false when project does not exist"},{"ancestorTitles":["Project Controller","GET /project/hackathonProject/:name"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller GET /project/hackathonProject/:name should return flag=false when user is not a participant","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return flag=false when user is not a participant"},{"ancestorTitles":["Project Controller","GET /project/hackathonProject/:name"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller GET /project/hackathonProject/:name should return 400 on database error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 on database error"},{"ancestorTitles":["Project Controller","POST /project/hackathonProject/:name"],"duration":35,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller POST /project/hackathonProject/:name should return 400 if project already exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 400 if project already exists"},{"ancestorTitles":["Project Controller","POST /project/hackathonProject/:name"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller POST /project/hackathonProject/:name should return 200 with message if user is not a participant","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 200 with message if user is not a participant"},{"ancestorTitles":["Project Controller","POST /project/hackathonProject/:name"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Project Controller POST /project/hackathonProject/:name should return 400 on database error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 400 on database error"}],"endTime":1746507979105,"message":"","name":"/home/charvi/Documents/GitHub/HackFolio/backend/controller/test/project.test.js","startTime":1746507977519,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User Authentication"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"User Authentication user can register with valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"user can register with valid data"},{"ancestorTitles":["User Authentication"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"User Authentication user can login with valid credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"user can login with valid credentials"},{"ancestorTitles":["User Authentication"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"User Authentication user cannot login with invalid credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"user cannot login with invalid credentials"},{"ancestorTitles":["User Authentication"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"User Authentication password reset works correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"password reset works correctly"},{"ancestorTitles":["Project Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Project Management projects can be created with valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"projects can be created with valid data"},{"ancestorTitles":["Project Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Project Management projects can be retrieved by ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"projects can be retrieved by ID"},{"ancestorTitles":["Project Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Project Management projects can be updated by owner","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"projects can be updated by owner"},{"ancestorTitles":["Project Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Project Management projects can be deleted by owner","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"projects can be deleted by owner"},{"ancestorTitles":["Hackathon Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Hackathon Management hackathons can be created with valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"hackathons can be created with valid data"},{"ancestorTitles":["Hackathon Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Hackathon Management hackathons can be retrieved by ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"hackathons can be retrieved by ID"},{"ancestorTitles":["Hackathon Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Hackathon Management users can register for hackathons","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"users can register for hackathons"},{"ancestorTitles":["Hackathon Management"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Hackathon Management users can create teams for hackathons","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"users can create teams for hackathons"},{"ancestorTitles":["Hackathon Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Hackathon Management users can join existing teams","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"users can join existing teams"},{"ancestorTitles":["Sponsor Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Management sponsors can be created with valid data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sponsors can be created with valid data"},{"ancestorTitles":["Sponsor Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Management sponsors can be approved by admin","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sponsors can be approved by admin"},{"ancestorTitles":["Sponsor Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Management sponsors can update their profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"sponsors can update their profile"},{"ancestorTitles":["Sponsor Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Management verified sponsors are displayed publicly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"verified sponsors are displayed publicly"},{"ancestorTitles":["Sponsor Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Sponsor Management pending sponsors are visible to admins","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"pending sponsors are visible to admins"}],"endTime":1746507979206,"message":"","name":"/home/charvi/Documents/GitHub/HackFolio/backend/controller/test/minimal.test.js","startTime":1746507979112,"status":"passed","summary":""}],"wasInterrupted":false}
